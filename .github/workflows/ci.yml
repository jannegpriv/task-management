name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: taskmanagement
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/taskmanagement
      run: |
        pytest -v

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      env:
        REGISTRY: ghcr.io
        IMAGE_NAME: ${{ github.repository_owner }}/task-management-api
      run: |
        # Convert image name to lowercase
        IMAGE_NAME_LOWER=$(echo $IMAGE_NAME | tr '[:upper:]' '[:lower:]')
        
        # Build the image
        docker build -t $REGISTRY/$IMAGE_NAME_LOWER:latest .
        docker tag $REGISTRY/$IMAGE_NAME_LOWER:latest $REGISTRY/$IMAGE_NAME_LOWER:${{ github.sha }}
        
        # Push both tags
        docker push $REGISTRY/$IMAGE_NAME_LOWER:latest
        docker push $REGISTRY/$IMAGE_NAME_LOWER:${{ github.sha }}
